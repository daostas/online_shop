syntax = "proto3";
//import "google/protobuf/timestamp.proto";
package proto;
option go_package = "../pb";

// protoc -I=pb --go_out=pb  --go-grpc_out=pb  pb/admin_service.proto

message EmptyAdminReq{
    
}

message AdminRes {
    int32 status = 1;
    string err = 2;
}

message Localization{
    string title = 1;
    string description = 2;
}

message ChangeStatusReq{
    int32 id = 1;
}

message ChangeStatusRes{
    int32 status = 1;
    string err = 2;
    bool object = 3;
}

message DataTableReq {
    int32 draw = 1;
    repeated DataTableColumns columns = 2;
    repeated DataTableOrder order = 3;
    int32 start = 4;
    int32 length = 5;
    Search search = 6;
    map<string, string> filter = 7;
}

message DataTableRes { 
    message Response {
    int32 draw = 1;
    int32 recordstotal = 2;
    int32 recordsfiltered = 3;
    repeated bytes data = 4;
    }
    bytes data = 1;
    string err = 2;
    int32 status = 3;
}

message DataTableColumns {
    string data = 1;
    string name = 2;
    bool orderable = 3;
    bool searchable = 4;
    Search search = 5;
} 

message DataTableOrder {
    int32 column = 1;
    string dir = 2;
}

message Search {
    string value = 1;
    bool regex = 2;
}

service AdminProducers{
    rpc RegisterProducer (RegProducerReq) returns (AdminRes){}
    rpc GetListOfProducers (DataTableReq) returns (DataTableRes){}
    rpc ChangeProducerStatus (ChangeStatusReq) returns (ChangeStatusRes){}
}


message Producer{
    int32 id = 1;
    repeated string photos = 2;
    bool status = 3;
    map<string, Localization>  localizations = 4;
}

message GetListOfProducersRes{
    message result{
        int32 producer_id = 1;
        string title = 2;
        repeated string photos = 3;
    }
    repeated result producerslist = 1 ; 
    string err = 2;
}

message RegProducerReq{
    repeated string photos = 1;
    bool status = 2;
    map<string, Localization> localizations = 3;
}



service AdminProducts {
    rpc RegisterProduct (RegProductReq) returns (AdminRes){}
    rpc GetListOfProducts (DataTableReq) returns (DataTableRes){}
    rpc GetProduct (GetProductReq) returns (GetProductRes){}
    rpc ChangeProductsStatus (ChangeStatusReq) returns (ChangeStatusRes){}
    rpc AddProductToGroup (AddToGroupReq) returns (AdminRes){}
    rpc AddProductToProducer (AddToProducerReq) returns (AdminRes){}
}


message RegParentProductReq{
    string model = 1;
    string sku = 2;
    string upc = 3;
    string jan = 4;
    string usbn = 5;
    string mpn = 6;
    int32 price = 7;
    map<string, Localization>  localizations = 8;
}

message RegProductReq{
    int32 parent_id = 1;
    string model = 2;
    string sku = 3;
    string upc = 4;
    string jan = 5;
    string usbn = 6;
    string mpn = 7;
    repeated string photos = 8;
    int32 amount = 9;
    double rating = 10;
    int32 current_discount = 11;
    double price = 12;
    map<string, Localization>  localizations = 13;

}
message GetListOfProductsRes{
    message result{
        int32 product_id = 1;
        string title = 2;
        repeated string photos = 3;
        int32 price = 4;
    }
    repeated result productslist = 1 ; 
    string err = 2;
}

message AddToGroupReq{
    int32 product_id = 1; 
    int32 group_id = 2;
}

message AddToProducerReq{
    int32 product_id = 1; 
    int32 producer_id = 2;
}

message GetProductReq{
    int32 product_id = 1;
    int32 lang_id = 2;
}

message GetProductRes{
    message Product {
        int32 parent_id = 1;
        string model = 2;
        string sku = 3;
        string upc = 4;
        string jan = 5;
        string usbn = 6;
        string mpn = 7;
        repeated string photos = 8;
        int32 amount = 9;
        double rating = 10;
        int32 current_discount = 11;
        bool status = 12;
        string title = 13;
        string description = 14;
    
    }

    message Parametr{
        int32 parametr_id = 1;
        string title = 2;
        string value = 3;
    }

    message Kit {
        int32 product_id = 1;
        string title = 2;
    }

    Product product = 1;
    repeated Kit kits = 2;
    repeated Parametr parametrs = 3;
    int32 status = 4;
    string err = 5;
}

service AdminGroups {
    rpc RegisterGroup (RegGroupReq) returns (AdminRes){}
    rpc UpdateGroup (UpdateGroupReq) returns (AdminRes) {}
    rpc GetListOfGroups (DataTableReq) returns (DataTableRes){}
    rpc ChangeGroupsStatus (ChangeStatusReq) returns (ChangeStatusRes){}
}

message UpdateGroupReq{ 
    int32 id = 1;
    int32 parent_id = 2;
    repeated string photos = 3;
    bool status = 4;
    int32 sort_order = 5;
    map<string, Localization>  localizations = 6;
}

message RegGroupReq{
    int32 parent_id = 1;
    string photos = 2;
    bool status = 3;
    int32 sort_order = 4;
    map<string, Localization>  localizations = 5;
}

service AdminLanguages{
    rpc NewLanguage (NewLangReq) returns (AdminRes){}
    rpc GetListOfLanguages (DataTableReq) returns (DataTableRes){}
    rpc ChangeLanguageStatus (ChangeStatusReq) returns (ChangeStatusRes){}
}

message Language {
    int32 lang_id = 1;
    string code = 2;
    string image = 3; 
    string locale = 4; 
    string lang_name = 5;
    int32 sort_order = 6;
    bool status = 9;
}


message NewLangReq{
    string code = 1;
    string image = 2; 
    string locale = 3; 
    string lang_name = 4;
    int32 sort_order = 5;
    bool status = 6;
}

message GetListOfLanguagesRes{
    repeated Language languages = 1;
    string err = 2;
}

message ChangeLanguageStatusReq{
    int32 lang_id = 1;
}


service AdminSettingService {
    rpc SetDefaultLanguage (SetDefaultLanguageReq) returns (AdminRes){}
}


message SetDefaultLanguageReq {
    int32 lang_id = 1;
}

service AdminParametrs {
    rpc RegisterParametr (RegParametrReq) returns (AdminRes){}
    rpc UpdateParametr (UpdateParametrReq) returns (AdminRes) {}
    rpc GetListOfParametrs (DataTableReq) returns (DataTableRes){}
    rpc ChangeParametrsStatus (ChangeStatusReq) returns (ChangeStatusRes){}
    rpc AddParametrToProduct (AddParametrToProductReq) returns (AdminRes){}
    rpc AddParametrToGroup (AddParametrToGroupReq) returns (AdminRes){}
}

message AddParametrToGroupReq{
    int32 parametr_id = 1;
    int32 group_id = 2;
}

message AddParametrToProductReq{
    int32 parametr_id = 1;
    int32 product_id = 2;
    string value = 3;
}

message RegParametrReq{
    map<string, Localization>  localizations = 1;
}

message UpdateParametrReq{

}
